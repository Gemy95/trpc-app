scalar DateTime

enum ActiveStatus {
  active
  inActive
}

type City {
  name: String
  _id: String
  client_status: ActiveStatus
  stores_status: ActiveStatus
  longitude: Float
  latitude: Float
  longitudeDelta: Float
  latitudeDelta: Float
  translation: [Translation]
  country: Country
  createdAt: DateTime
  updatedAt: DateTime
  isEnabledReservation: Boolean
}
# add cityInput type
input CityInput {
  name: String
  country: String
  client_status: ActiveStatus
  stores_status: ActiveStatus
  longitude: Float
  latitude: Float
  longitudeDelta: Float
  latitudeDelta: Float
  translation: [TranslationInput]
  isEnabledReservation: Boolean
}

input CityQueryDto {
  search: String
  page: Int
  limit: Int
  paginate: Boolean
  fields: Void
  sort: Void
  client_status: STATUS
  stores_status: STATUS
  countries: [String]
}

type Query {
  cities(params: CityQueryDto): [City]
  city(countryId: String!, cityId: String!): City
}

type RemoveCityRes {
  result: City
  message: String
  success: Boolean
}

type Mutation {
  createCity(city: CityInput!): City
  updateCity(countryId: String!, cityId: String!, city: CityInput!): City
  removeCity(countryId: String!, cityId: String!): RemoveCityRes
}
