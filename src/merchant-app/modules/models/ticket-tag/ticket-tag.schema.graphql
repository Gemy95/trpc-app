type TicketTagTranslation {
  _lang: String
  description: String
}

input TicketTagTranslationInput {
  _lang: String
  description: String
}

type TicketTag {
  description: String
  isDeleted: Boolean
  translation: [TicketTagTranslation]
}

input CreateTicketsTagDto {
  descriptionArabic: String
  descriptionEnglish: String
}

input UpdateTicketsTagDto {
  descriptionArabic: String
  descriptionEnglish: String
}

type FindAllTicketsTagsRes {
  tickettags: [TicketTag]
  page: Int
  pages: Int
  length: Int
}

type Mutation {
  createTicketTag(createTicketsTagDto: CreateTicketsTagDto): TicketTag
  updateOneTicketTag(id: String!, updateTicketsTagDto: UpdateTicketsTagDto): TicketTag
  removeOneTicketTag(id: String!): TicketTag
}

type Query {
  findAllTicketsTags(params: GetAllDtoInput): FindAllTicketsTagsRes
  findOneTicketTag(id: String!): TicketTag
}
