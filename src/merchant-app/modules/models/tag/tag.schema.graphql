#Defintions
scalar DateTime
# types

type Tag {
  _id: String
  name: String
  search: [String]
  category: Category
  status: ActiveStatus
  translation: [Translation]
  client_visibility: Boolean
  stores_visibility: Boolean
  new: Boolean
  image: String
  createdAt: DateTime
  updatedAt: DateTime
}

type ResRemoveTag {
  success: Boolean
  result: Tag
  message: String
  error: String
}

input CategoryTag {
  categoryId: String
}

input FindAllClientTagDto {
  categoriesIds: [CategoryTag]
}

# inputs

input TagInput {
  name: String
  category: String
  status: ActiveStatus
  translation: [TranslationInput]
  client_visibility: Boolean
  stores_visibility: Boolean
  new: Boolean
  image: String
}

type MarketPlaceFindAllTagsRes {
  tags: [Tag]
  page: Int
  pages: Int
  length: Int
}

# queries
type Query {
  tags(categories: String): [Tag]
  tag(categoryId: String, tagId: String): Tag

  # Marketplace
  marketPlaceFindAllTags(query: GetAllDtoInput, categoriesIds: FindAllClientTagDto): MarketPlaceFindAllTagsRes
}
# mutations
type Mutation {
  createTag(categoryId: String!, tag: TagInput!): Tag
  updateTag(categoryId: String!, tagId: String!, tag: TagInput!): Tag
  removeTag(categoryId: String!, tagId: String): ResRemoveTag
}
