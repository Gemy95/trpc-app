# Enums
enum ForTypeEnum {
  CLIENTS_MOBILE
  CLIENTS_WEB
  CLIENTS_DESKTOP
  MERCHANTS_MOBILE
  MERCHANTS_WEB
  MERCHANTS_DESKTOP
  DELIVERY_MOBILE
  DELIVERY_WEB
}

# Types

type BoardingTranslation {
  _lang: String
  title: String
  description: String
}

type BoardingStep {
  image: String
  title: String
  description: String
  stepNum: Int
  translation: [BoardingTranslation]
}

type Boarding {
  _id: String
  for_type: ForTypeEnum
  steps: [BoardingStep]
}

# Inputs
input BoardingTranslationInput {
  _lang: String
  title: String
  description: String
}

input BoardingInputStep {
  image: String!
  title: String!
  description: String!
  stepNum: Int!
  translation: [BoardingTranslationInput]
}

input UpdateBoardingInputStep {
  image: String
  title: String
  description: String
  stepNum: Int!
  translation: [BoardingTranslationInput]
}

input BoardingInput {
  for_type: ForTypeEnum!
  steps: [BoardingInputStep]!
}

input QueryBoardingInput {
  for_type: ForTypeEnum
}

input UpdateBoardingInput {
  steps: [UpdateBoardingInputStep]
}

input RemoveInputStep {
  stepNum: Int!
}

input RemoveBoardingInput {
  steps: [RemoveInputStep]
}

# Queries

type Query {
  boarding(for_type: QueryBoardingInput): [Boarding]
}

type Response {
  _id: String
  for_type: ForTypeEnum
  steps: [BoardingStep]
  createdAt: String
  updatedAt: String
  message: String
  success: Boolean
}

type UpdateBoardingResponse {
  _id: String
  for_type: ForTypeEnum
  steps: [BoardingStep]
  createdAt: String
  updatedAt: String
  message: String
  success: Boolean
  err: String
}

# Mutations

type Mutation {
  createOnBoarding(data: BoardingInput): Response
  updateOnBoarding(_id: String!, data: UpdateBoardingInput): UpdateBoardingResponse
  removeOnBoarding(_id: String!, removeSteps: RemoveBoardingInput): Response
}
