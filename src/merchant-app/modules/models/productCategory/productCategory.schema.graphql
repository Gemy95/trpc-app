scalar Void

enum PRODUCT_CATEGORY_STATUS {
  active
  inActive
}

type ProductCategoryTranslation {
  _lang: String
  name: String
}

input ProductCategoryTranslationInput {
  _lang: String
  name: String
}

type ProductCategory {
  _id: String
  name: String
  user: String
  status: PRODUCT_CATEGORY_STATUS
  merchantId: Merchant
  image: String
  search: [String]
  translation: [ProductCategoryTranslation]
  isDeleted: Boolean
  serialDisplayNumber: Int
  products: [Product]
  createdAt: String
  updatedAt: String
}

type ProductCategoryRes {
  _id: String
  name: String
  user: String
  status: PRODUCT_CATEGORY_STATUS
  merchantId: String
  image: String
  search: [String]
  translation: [ProductCategoryTranslation]
  isDeleted: Boolean
  serialDisplayNumber: Int
  createdAt: String
  updatedAt: String
}

input CreateProductCategoryDto {
  nameArabic: String
  nameEnglish: String
  status: PRODUCT_CATEGORY_STATUS
  image: String
}


input Params {
  branches: [String]
  search: String
  page: Int
  limit: Int
  paginate: Boolean
  fields: Void
  sort: Void
}

type FindAllProductCategoryRes {
  productcategories: [ProductCategory]
  page: Int
  pages: Int
  length: Int
}

input UpdateProductCategoryDto {
  nameArabic: String
  nameEnglish: String
  status: PRODUCT_CATEGORY_STATUS
  image: String
  serialDisplayNumber: Int
}

type RemoveProductCategoryRes {
  message: String
}

input UpdateSerialInput {
  id: String
  newSerialNumber: Int
}

input ReorderSerialNumberInput {
  serials: [UpdateSerialInput]
}


type Mutation {
  createProductCategory(merchantId: String!, createProductCategoryDto: CreateProductCategoryDto!): ProductCategory
  updatProductCategory(id: String!, merchantId: String!, updateProductCategoryDto: UpdateProductCategoryDto): ProductCategory
  removeProductCategory(id: String!, merchantId: String!): RemoveProductCategoryRes
  serialsReorderProductCategory(
      reorderSerialNumber: ReorderSerialNumberInput
  ): [ProductCategory]
}

type Query {
  findAllProductCategory(merchantId: String!, params: Params): FindAllProductCategoryRes
  findOneProductCategory(id: String!, merchantId: String!): ProductCategory
}
