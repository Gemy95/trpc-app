type TranslationMenuTemplateProductGroup {
  _lang: String
  name: String
}

input TranslationMenuTemplateProductGroupInput {
  _lang: String
  name: String
}

input CreateMenuTemplateProductGroupDto {
  nameEnglish: String
  nameArabic: String
  minimum: Int
  maximum: Int
  options: [OptionDto]
  required: Boolean
  status: STATUS
}

type MenuTemplateGroupOption {
  name: String
  extraPrice: Float
  translation: [GroupOptionTranslation]
  serialDisplayNumber: Int
}

type MenuTemplateProductGroup {
  _id: String
  name: String
  minimum: Int
  maximum: Int
  options: [MenuTemplateGroupOption]
  translation: [TranslationMenuTemplateProductGroup]
  required: Boolean
  status: String
  isDeleted: Boolean
}

input CreateMenuTemplateProductGroupDto {
  nameEnglish: String
  nameArabic: String
  minimum: Int
  maximum: Int
  options: [OptionDto]
  required: Boolean
  status: STATUS
}

input UpdateMenuTemplateProductGroupInput {
  nameEnglish: String
  nameArabic: String
  minimum: Int
  maximum: Int
  options: [OptionDto]
  required: Boolean
  status: STATUS
}

type FindAllMenuTemplateProductGroupsRes {
  page: Int
  pages: Int
  length: Int
  menutemplateproductgroups: [MenuTemplateProductGroup]
}

type ShoppexEmployeeDeleteMenuTemplateProductGroupRes {
  success: Boolean
}

input FindAllMenuTemplateProductGroupsInput {
  page: Int
  limit: Int
  sortBy: String
  paginate: Boolean
  order: Int
}

type Mutation {
  shoppexEmployeeCreateMenuTemplateProductGroup(
    createMenuTemplateProductGroupDto: CreateMenuTemplateProductGroupDto
  ): MenuTemplateProductGroup
  shoppexEmployeeUpdateMenuTemplateProductGroup(
    menuTemplateProductGroupId: String!
    updateMenuTemplateProductGroupDto: UpdateMenuTemplateProductGroupInput
  ): MenuTemplateProductGroup
  shoppexEmployeeDeleteMenuTemplateProductGroup(
    menuTemplateProductGroupId: String!
  ): ShoppexEmployeeDeleteMenuTemplateProductGroupRes
}

type Query {
  findAllMenuTemplateProductGroups(params: FindAllMenuTemplateProductGroupsInput): FindAllMenuTemplateProductGroupsRes
  findOneMenuTemplateProductGroup(menuTemplateProductGroupId: String!): MenuTemplateProductGroup
}
