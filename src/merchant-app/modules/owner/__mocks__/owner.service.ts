import {
  adminUpdateOwnerStub,
  changePasswordStub,
  createOwnerStub,
  findOwnerOrMerchantEmployeeByIdStub,
  getByMobileOrEmailStub,
  getOwnerByIdStub,
  getOwnerDetailsByIdStub,
  loginStub,
  requestChangeEmailStub,
  requestChangeMobileStub,
  requestForgetPasswordStub,
  updateOwnerByItselfStub,
  verifyChangeEmailStub,
  verifyChangeMobileStub,
  verifyEmailStub,
  verifyForgetPasswordStub,
  verifyMobileStub,
} from '../test/stubs/owner.stub';

export const OwnerService = jest.fn().mockReturnValue({
  create: jest.fn().mockReturnValue(createOwnerStub()),
  verifyMobile: jest.fn().mockReturnValue(verifyMobileStub()),
  verifyEmail: jest.fn().mockReturnValue(verifyEmailStub()),
  login: jest.fn().mockReturnValue(loginStub()),
  requestForgetPassword: jest.fn().mockReturnValue(requestForgetPasswordStub()),
  verifyForgetPassword: jest.fn().mockReturnValue(verifyForgetPasswordStub()),
  changePassword: jest.fn().mockReturnValue(changePasswordStub()),
  getOwnerDetailsById: jest.fn().mockReturnValue(getOwnerDetailsByIdStub()),
  adminUpdateOwner: jest.fn().mockReturnValue(adminUpdateOwnerStub()),
  getByMobileOrEmail: jest.fn().mockReturnValue(getByMobileOrEmailStub()),
  getOwnerById: jest.fn().mockReturnValue(getOwnerByIdStub()),
  updateOwnerByItself: jest.fn().mockReturnValue(updateOwnerByItselfStub()),
  requestChangeEmail: jest.fn().mockReturnValue(requestChangeEmailStub()),
  verifyChangeEmail: jest.fn().mockReturnValue(verifyChangeEmailStub()),
  requestChangeMobile: jest.fn().mockReturnValue(requestChangeMobileStub()),
  verifyChangeMobile: jest.fn().mockReturnValue(verifyChangeMobileStub()),
  findOwnerOrMerchantEmployeeById: jest.fn().mockReturnValue(findOwnerOrMerchantEmployeeByIdStub()),
});
